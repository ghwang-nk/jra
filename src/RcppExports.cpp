// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// OPS
arma::umat OPS(int n, arma::vec prop);
RcppExport SEXP _jra_OPS(SEXP nSEXP, SEXP propSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type prop(propSEXP);
    rcpp_result_gen = Rcpp::wrap(OPS(n, prop));
    return rcpp_result_gen;
END_RCPP
}
// ker_r
double ker_r(double u);
RcppExport SEXP _jra_ker_r(SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ker_r(u));
    return rcpp_result_gen;
END_RCPP
}
// ker_l
double ker_l(double u);
RcppExport SEXP _jra_ker_l(SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ker_l(u));
    return rcpp_result_gen;
END_RCPP
}
// mfit_r
double mfit_r(double x, arma::vec Y, arma::vec X, double h);
RcppExport SEXP _jra_mfit_r(SEXP xSEXP, SEXP YSEXP, SEXP XSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(mfit_r(x, Y, X, h));
    return rcpp_result_gen;
END_RCPP
}
// mfit_l
double mfit_l(double x, arma::vec Y, arma::vec X, double h);
RcppExport SEXP _jra_mfit_l(SEXP xSEXP, SEXP YSEXP, SEXP XSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(mfit_l(x, Y, X, h));
    return rcpp_result_gen;
END_RCPP
}
// delta
arma::vec delta(arma::vec x_seq, arma::vec Y, arma::vec X, double h);
RcppExport SEXP _jra_delta(SEXP x_seqSEXP, SEXP YSEXP, SEXP XSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x_seq(x_seqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(delta(x_seq, Y, X, h));
    return rcpp_result_gen;
END_RCPP
}
// detect
List detect(arma::vec x_seq, arma::vec Y, arma::vec X, double h, double c_h, int L);
RcppExport SEXP _jra_detect(SEXP x_seqSEXP, SEXP YSEXP, SEXP XSEXP, SEXP hSEXP, SEXP c_hSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x_seq(x_seqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type c_h(c_hSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(detect(x_seq, Y, X, h, c_h, L));
    return rcpp_result_gen;
END_RCPP
}
// ker_c
double ker_c(double u);
RcppExport SEXP _jra_ker_c(SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ker_c(u));
    return rcpp_result_gen;
END_RCPP
}
// mfit_c
double mfit_c(double x, arma::vec Y, arma::vec X, double h);
RcppExport SEXP _jra_mfit_c(SEXP xSEXP, SEXP YSEXP, SEXP XSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(mfit_c(x, Y, X, h));
    return rcpp_result_gen;
END_RCPP
}
// JIC
List JIC(arma::vec x_seq, arma::vec Y, arma::vec X, double h, double c_h, int L, double gamma, arma::vec adj_fac_JIC, arma::vec adj_fac_BIC);
RcppExport SEXP _jra_JIC(SEXP x_seqSEXP, SEXP YSEXP, SEXP XSEXP, SEXP hSEXP, SEXP c_hSEXP, SEXP LSEXP, SEXP gammaSEXP, SEXP adj_fac_JICSEXP, SEXP adj_fac_BICSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x_seq(x_seqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type c_h(c_hSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type adj_fac_JIC(adj_fac_JICSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type adj_fac_BIC(adj_fac_BICSEXP);
    rcpp_result_gen = Rcpp::wrap(JIC(x_seq, Y, X, h, c_h, L, gamma, adj_fac_JIC, adj_fac_BIC));
    return rcpp_result_gen;
END_RCPP
}
// val
List val(arma::vec x_seq, arma::vec Y_O, arma::vec X_O, arma::vec Y_E, arma::vec X_E, double h, double c_h, int L);
RcppExport SEXP _jra_val(SEXP x_seqSEXP, SEXP Y_OSEXP, SEXP X_OSEXP, SEXP Y_ESEXP, SEXP X_ESEXP, SEXP hSEXP, SEXP c_hSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x_seq(x_seqSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_O(Y_OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X_O(X_OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_E(Y_ESEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X_E(X_ESEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type c_h(c_hSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(val(x_seq, Y_O, X_O, Y_E, X_E, h, c_h, L));
    return rcpp_result_gen;
END_RCPP
}
// RSS_h
List RSS_h(arma::vec jump_loc, arma::vec jump_size, arma::vec Y_O, arma::vec X_O, arma::vec Y_H, arma::vec X_H, double h);
RcppExport SEXP _jra_RSS_h(SEXP jump_locSEXP, SEXP jump_sizeSEXP, SEXP Y_OSEXP, SEXP X_OSEXP, SEXP Y_HSEXP, SEXP X_HSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type jump_loc(jump_locSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type jump_size(jump_sizeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_O(Y_OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X_O(X_OSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y_H(Y_HSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X_H(X_HSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(RSS_h(jump_loc, jump_size, Y_O, X_O, Y_H, X_H, h));
    return rcpp_result_gen;
END_RCPP
}
// sFDP
List sFDP(arma::vec W, arma::vec q_all);
RcppExport SEXP _jra_sFDP(SEXP WSEXP, SEXP q_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q_all(q_allSEXP);
    rcpp_result_gen = Rcpp::wrap(sFDP(W, q_all));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jra_OPS", (DL_FUNC) &_jra_OPS, 2},
    {"_jra_ker_r", (DL_FUNC) &_jra_ker_r, 1},
    {"_jra_ker_l", (DL_FUNC) &_jra_ker_l, 1},
    {"_jra_mfit_r", (DL_FUNC) &_jra_mfit_r, 4},
    {"_jra_mfit_l", (DL_FUNC) &_jra_mfit_l, 4},
    {"_jra_delta", (DL_FUNC) &_jra_delta, 4},
    {"_jra_detect", (DL_FUNC) &_jra_detect, 6},
    {"_jra_ker_c", (DL_FUNC) &_jra_ker_c, 1},
    {"_jra_mfit_c", (DL_FUNC) &_jra_mfit_c, 4},
    {"_jra_JIC", (DL_FUNC) &_jra_JIC, 9},
    {"_jra_val", (DL_FUNC) &_jra_val, 8},
    {"_jra_RSS_h", (DL_FUNC) &_jra_RSS_h, 7},
    {"_jra_sFDP", (DL_FUNC) &_jra_sFDP, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_jra(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
